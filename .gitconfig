#            ██   ██                               ████ ██
#     █████ ░░   ░██                              ░██░ ░░   █████
#    ██░░░██ ██ ██████  █████   ██████  ███████  ██████ ██ ██░░░██
#   ░██  ░██░██░░░██░  ██░░░██ ██░░░░██░░██░░░██░░░██░ ░██░██  ░██
#   ░░██████░██  ░██  ░██  ░░ ░██   ░██ ░██  ░██  ░██  ░██░░██████
#    ░░░░░██░██  ░██  ░██   ██░██   ░██ ░██  ░██  ░██  ░██ ░░░░░██
#     █████ ░██  ░░██ ░░█████ ░░██████  ███  ░██  ░██  ░██  █████
#    ░░░░░  ░░    ░░   ░░░░░   ░░░░░░  ░░░   ░░   ░░   ░░  ░░░░░

# Taken from https://blog.scottnonnenberg.com/better-git-configuration/
# and from https://switowski.com/blog/configuring-git

[user]
    name = Daniele Foroni
    email = daniele.foroni@gmail.com

[github]
    user = forons

[color]
    ui = auto

[color "status"]
    added = yellow
    changed = green
    untracked = cyan

[color "diff"]
    meta = yellow
    frag = magenta bold
    commit = yellow bold
    old = red bold
    new = green bold
    whitespace = red reverse

[color "diff-highlight"]
    oldNormal = red bold
    oldHighlight = red bold 52
    newNormal = green bold
    newHighlight = green bold 22

[core]
    editor = vim
    excludesfile = ~/.gitignore

    pager = diff-so-fancy | less --tabs=4 -RFX

    # Enable parallel I/O for operations like "git diff".
    preloadindex = true

    # Use 12 characters for the abbreviated commit hash. I can currently make
    # do with 10, but this should provide a certain level of safety for the
    # near-ish future. See the interesting and well-researched article at
    # http://blog.cuviper.com/2013/11/10/how-short-can-git-abbreviate/
    abbrev = 12

[alias]
    # Squashing commits. E.g., git squash 5 -> squashes the last 5 commits into 1
    squash = "!f(){ git reset --soft HEAD~${1} && git commit --edit -m\"$(git log --format=%B --reverse HEAD..HEAD@{1})\"; };f"

    # Amend commit
    amend = commit --amend

    # Show aliases
    aliases = config --get-regexp alias

    # Ignore repeated git
    git = !exec git

    # undo = reset --soft HEAD^
    # Not quite as common as an amend, but still common
    # https://git-scm.com/docs/git-reset#git-reset-emgitresetemltmodegtltcommitgt

    stash-all = stash save --include-untracked
    # We wanna grab those pesky un-added files!
    # https://git-scm.com/docs/git-stash

    glog = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
    # No need for a GUI - a nice, colorful, graphical representation
    # https://git-scm.com/docs/git-log
    # via https://medium.com/@payload.dd/thanks-for-the-git-st-i-will-use-this-4da5839a21a4

    unstage = reset HEAD --

[credential]
    helper = osxkeychain

[pager]
    diff = diff-so-fancy | less --tabs=1,5 -RFX
    show = diff-so-fancy | less --tabs=1,5 -RFX

[status]
    showUntrackedFiles = all

[apply]
    # Detect whitespace errors when applying a patch
    whitespace = fix

[push]
    default = current
